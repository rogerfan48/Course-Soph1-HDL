$date
	Sat Oct 19 17:25:58 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module BIST_t $end
$var wire 1 ! scan_out $end
$var wire 1 " scan_in $end
$var reg 1 # clk $end
$var reg 1 $ rst_n $end
$var reg 1 % scan_en $end
$scope module BIST $end
$var wire 1 # clk $end
$var wire 1 $ rst_n $end
$var wire 1 % scan_en $end
$var wire 1 ! scan_out $end
$var wire 1 " scan_in $end
$scope module LFSR0 $end
$var wire 1 # clk $end
$var wire 1 $ rst_n $end
$var wire 1 " out $end
$var parameter 8 & S0 $end
$var reg 8 ' MEM [7:0] $end
$upscope $end
$scope module SCD0 $end
$var wire 1 # clk $end
$var wire 1 $ rst_n $end
$var wire 1 % scan_en $end
$var wire 1 " scan_in $end
$var wire 1 ! scan_out $end
$var wire 8 ( p [7:0] $end
$var wire 4 ) b_out [3:0] $end
$var wire 4 * a_out [3:0] $end
$scope module a0 $end
$var wire 1 # clk $end
$var wire 1 + data $end
$var wire 1 $ rst_n $end
$var wire 1 % scan_en $end
$var wire 1 , scan_in $end
$var reg 1 - out $end
$upscope $end
$scope module a1 $end
$var wire 1 # clk $end
$var wire 1 . data $end
$var wire 1 $ rst_n $end
$var wire 1 % scan_en $end
$var wire 1 / scan_in $end
$var reg 1 0 out $end
$upscope $end
$scope module a2 $end
$var wire 1 # clk $end
$var wire 1 1 data $end
$var wire 1 $ rst_n $end
$var wire 1 % scan_en $end
$var wire 1 2 scan_in $end
$var reg 1 3 out $end
$upscope $end
$scope module a3 $end
$var wire 1 # clk $end
$var wire 1 4 data $end
$var wire 1 $ rst_n $end
$var wire 1 % scan_en $end
$var wire 1 " scan_in $end
$var reg 1 5 out $end
$upscope $end
$scope module b0 $end
$var wire 1 # clk $end
$var wire 1 6 data $end
$var wire 1 $ rst_n $end
$var wire 1 % scan_en $end
$var wire 1 7 scan_in $end
$var reg 1 8 out $end
$upscope $end
$scope module b1 $end
$var wire 1 # clk $end
$var wire 1 9 data $end
$var wire 1 $ rst_n $end
$var wire 1 % scan_en $end
$var wire 1 : scan_in $end
$var reg 1 ; out $end
$upscope $end
$scope module b2 $end
$var wire 1 # clk $end
$var wire 1 < data $end
$var wire 1 $ rst_n $end
$var wire 1 % scan_en $end
$var wire 1 = scan_in $end
$var reg 1 > out $end
$upscope $end
$scope module b3 $end
$var wire 1 # clk $end
$var wire 1 ? data $end
$var wire 1 $ rst_n $end
$var wire 1 % scan_en $end
$var wire 1 @ scan_in $end
$var reg 1 A out $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b10111101 &
$end
#0
$dumpvars
xA
x@
x?
x>
x=
x<
x;
x:
x9
x8
x7
x6
x5
x4
x3
x2
x1
x0
x/
x.
x-
x,
x+
bx *
bx )
bx (
bx '
0%
0$
0#
x"
x!
$end
#5000
1"
06
09
0<
0?
0+
0.
01
04
02
0/
0,
0@
0=
0:
07
0!
b10111101 '
b0 (
05
03
00
b0 *
0-
0A
0>
0;
b0 )
08
1#
#10000
0#
1%
1$
#15000
12
0"
b1000 *
15
b1111011 '
1#
#20000
0#
#25000
1"
02
1/
b11110110 '
05
b100 *
13
1#
#30000
0#
#35000
1,
0/
12
10
03
b1010 *
15
b11101101 '
1#
#40000
0#
#45000
1/
0,
1@
b11011011 '
13
00
b1101 *
1-
1#
#50000
0#
#55000
1+
1.
11
1=
0@
1,
b1110000 (
b1000 )
1A
0-
b1110 *
10
b10110111 '
1#
#60000
0#
#65000
0"
1@
1<
0=
1?
01
1:
b1101111 '
b1111 *
1-
0A
b111100 (
b100 )
1>
1#
#70000
0#
#75000
19
0+
17
0:
0?
11
1=
0.
02
1"
1;
0>
b1010 )
1A
b1000110 (
b111 *
05
b11011111 '
1#
#80000
0#
#85000
14
12
0/
1:
01
07
16
1?
1!
b10111110 '
15
b1011 *
03
1>
0;
b10001111 (
b1101 )
18
1#
#90000
0#
0%
#95000
17
0@
06
0<
09
1+
1.
11
04
0,
0"
b1111 )
1;
0-
b1111000 (
b1000 *
00
b1111100 '
1#
#100000
0#
1%
#105000
1"
02
1<
0.
1/
01
0=
b11111000 '
05
b100 *
13
b11100 (
b111 )
0A
1#
#110000
0#
#115000
0:
19
1,
0/
12
b11 )
0>
10
03
b11110 (
b1010 *
15
b11110000 '
1#
#120000
0#
#125000
1/
09
0,
1@
16
0+
07
b11100001 '
13
00
b1101 *
1-
b1101 (
b1 )
0;
1#
#130000
0#
#135000
0<
0?
0!
1+
1.
11
1=
0@
06
1,
08
b1000 )
1A
0-
b1110000 (
b1110 *
10
b11000011 '
1#
#140000
0#
#145000
1@
1<
0=
1?
01
1:
b10000110 '
b1111 *
1-
0A
b111100 (
b100 )
1>
1#
#150000
0#
#155000
19
0.
17
0:
0?
14
1=
0"
1;
0>
b10010110 (
b1010 )
1A
b1101 '
1#
#160000
0#
#165000
1?
04
02
0<
11
1:
07
16
1!
b11010 '
b111 *
05
1>
0;
b1011011 (
b1101 )
18
1#
#170000
0#
#175000
06
0!
17
0+
1.
01
0/
08
b1110 )
1;
b101010 (
b11 *
03
b110100 '
1#
#180000
0#
0%
#185000
0@
09
0?
1<
1+
0.
0:
b1101001 '
b10 *
0-
b10100 (
b1010 )
0>
1#
#190000
0#
