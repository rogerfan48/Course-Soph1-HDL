$date
	Sat Oct 19 17:24:59 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module Scan_Chain_Design_t $end
$var wire 1 ! scan_out $end
$var reg 1 " clk $end
$var reg 1 # rst_n $end
$var reg 1 $ scan_en $end
$var reg 1 % scan_in $end
$scope module DUT $end
$var wire 1 " clk $end
$var wire 1 # rst_n $end
$var wire 1 $ scan_en $end
$var wire 1 % scan_in $end
$var wire 1 ! scan_out $end
$var wire 8 & p [7:0] $end
$var wire 4 ' b_out [3:0] $end
$var wire 4 ( a_out [3:0] $end
$scope module a0 $end
$var wire 1 " clk $end
$var wire 1 ) data $end
$var wire 1 # rst_n $end
$var wire 1 $ scan_en $end
$var wire 1 * scan_in $end
$var reg 1 + out $end
$upscope $end
$scope module a1 $end
$var wire 1 " clk $end
$var wire 1 , data $end
$var wire 1 # rst_n $end
$var wire 1 $ scan_en $end
$var wire 1 - scan_in $end
$var reg 1 . out $end
$upscope $end
$scope module a2 $end
$var wire 1 " clk $end
$var wire 1 / data $end
$var wire 1 # rst_n $end
$var wire 1 $ scan_en $end
$var wire 1 0 scan_in $end
$var reg 1 1 out $end
$upscope $end
$scope module a3 $end
$var wire 1 " clk $end
$var wire 1 2 data $end
$var wire 1 # rst_n $end
$var wire 1 $ scan_en $end
$var wire 1 % scan_in $end
$var reg 1 3 out $end
$upscope $end
$scope module b0 $end
$var wire 1 " clk $end
$var wire 1 4 data $end
$var wire 1 # rst_n $end
$var wire 1 $ scan_en $end
$var wire 1 5 scan_in $end
$var reg 1 6 out $end
$upscope $end
$scope module b1 $end
$var wire 1 " clk $end
$var wire 1 7 data $end
$var wire 1 # rst_n $end
$var wire 1 $ scan_en $end
$var wire 1 8 scan_in $end
$var reg 1 9 out $end
$upscope $end
$scope module b2 $end
$var wire 1 " clk $end
$var wire 1 : data $end
$var wire 1 # rst_n $end
$var wire 1 $ scan_en $end
$var wire 1 ; scan_in $end
$var reg 1 < out $end
$upscope $end
$scope module b3 $end
$var wire 1 " clk $end
$var wire 1 = data $end
$var wire 1 # rst_n $end
$var wire 1 $ scan_en $end
$var wire 1 > scan_in $end
$var reg 1 ? out $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
x?
x>
x=
x<
x;
x:
x9
x8
x7
x6
x5
x4
x3
x2
x1
x0
x/
x.
x-
x,
x+
x*
x)
bx (
bx '
bx &
0%
0$
0#
0"
x!
$end
#5000
04
07
0:
0=
0)
0,
0/
02
00
0-
0*
0>
0;
08
05
0!
b0 &
03
01
0.
b0 (
0+
0?
0<
09
b0 '
06
1"
#10000
0"
1#
#15000
1"
#20000
0"
1$
#25000
1"
#30000
0"
1%
#35000
10
b1000 (
13
1"
#40000
0"
0%
#45000
00
1-
03
b100 (
11
1"
#50000
0"
1%
#55000
1*
0-
10
1.
01
b1010 (
13
1"
#60000
0"
#65000
1-
0*
1>
11
0.
b1101 (
1+
1"
#70000
0"
#75000
1)
1,
1/
1;
0>
1*
b1110000 &
b1000 '
1?
0+
b1110 (
1.
1"
#80000
0"
#85000
1>
1:
0;
1=
0/
18
b1111 (
1+
0?
b111100 &
b100 '
1<
1"
#90000
0"
#95000
17
0,
15
08
0=
12
1;
19
0<
b10010110 &
b1010 '
1?
1"
#100000
0"
0%
0$
#105000
1,
0-
0*
02
0;
18
01
b1001 (
0.
0?
b110110 &
b110 '
1<
1"
#110000
0"
1$
#115000
1!
08
1;
0>
07
1=
1-
0)
00
16
0<
b1011 '
1?
0+
11
b101100 &
b100 (
03
1"
#120000
0"
#125000
0:
0-
17
1*
0,
0;
18
05
01
b10 (
1.
0?
1<
b1010 &
b101 '
09
1"
#130000
0"
#135000
0!
15
08
1>
0=
0*
06
19
b10 '
0<
1+
b10 &
b1 (
0.
1"
#140000
0"
#145000
0>
1;
07
05
1!
b0 (
0+
1?
09
b0 &
b1001 '
16
1"
#150000
0"
#155000
0!
18
0;
06
1<
b100 '
0?
1"
#160000
0"
#165000
08
15
0<
b10 '
19
1"
#170000
0"
#175000
1!
05
16
b1 '
09
1"
#180000
0"
#185000
0!
b0 '
06
1"
#190000
0"
0$
#195000
1"
#200000
0"
